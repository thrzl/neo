---
// This is an Astro component file
import Layout from "../layouts/Layout.astro";
import MusicStats from "../components/islands/MusicStats.astro";
const ranges = import.meta.env.PROD
    ? ["this_week", "this_month", "this_year", "all_time"]
    : ["this_week", "this_month"];
---

<Layout title="tunes" description="my recent top albums">
    <div class="tabs-container">
        <div class="tab-labels">
            {
                ranges.map((range, index) => (
                    <button
                        class={`tab-label ${index === 0 ? "active" : ""}`}
                        data-tab={index}
                    >
                        {range.replace("this_", "").replace("_", " ")}
                    </button>
                ))
            }
        </div>
        {
            ranges.map((range, index) => (
                <div
                    class="tab-panel"
                    data-tab-panel={index}
                    hidden={index !== 0}
                >
                    <MusicStats range={range} />
                </div>
            ))
        }
    </div>

    <script>
        // let alreadyInitialized = false;
        function init_tabs() {
            const labels = document.querySelectorAll(".tab-label");
            const panels = document.querySelectorAll(".tab-panel");

            console.log(labels, panels);
            labels.forEach((label, i) => {
                label.addEventListener("click", () => {
                    labels.forEach((l) => l.classList.remove("active"));
                    panels.forEach((p) => (p.hidden = true));
                    console.log("click seen");

                    label.classList.add("active");
                    panels[i].hidden = false;
                });
            });
            // alreadyInitialized = true;
        }

        init_tabs();
    </script>
</Layout>

<style>
    .tabs-container {
        display: flex;
        flex-direction: column;
        background: rgb(22 101 52 / var(--un-bg-opacity));
        padding: 0.5rem;
    }

    .tab-labels {
        display: flex;
        justify-content: center;
        gap: 1rem;
    }

    .tab-label {
        font-weight: bold;
        padding: 0.4rem 1.5rem;
        cursor: pointer;
        /* color: white; */
        background: none;
        border: 1px dashed var(--un-border-color, #ffffff66);
    }

    .tab-label:hover {
        border-color: var(--un-hover-border, #ffffff);
        /* color: var(--un-hover-color, #ffffff); */
    }

    .tab-label.active {
        @apply b-dashed text-center b-cover-bright text-glow;
    }

    .tab-panel {
        padding: 1rem;
        background: rgb(20 83 45 / var(--un-bg-opacity));
        /* color: white; */
    }
</style>
