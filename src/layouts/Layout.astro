---
const {
	backgroundColor = "bg-green-9",
	title = "planet",
	description = "a home for all my hopes, dreams, thoughts and schemes",
	showHeader = true,
} = Astro.props;
import Html from "./Html.astro";
import Sidebar from "../components/Sidebar.astro";
import Footer from "../components/Footer.astro";
---


<Html backgroundColor={backgroundColor}>
    <script>
        document.addEventListener("astro:page-load", () => {
            const textColors = JSON.parse(sessionStorage.getItem(
				"textColors"
			) || "");
			const palette = JSON.parse(sessionStorage.getItem("palette") || "")
			if (!palette || !textColors) {
				return
			}
			document.documentElement.style.setProperty(
				"--accent-bg-dark",
				`rgb(${palette?.DarkVibrant?.rgb.join(", ")})` || "#000000",
			);
			document.documentElement.style.setProperty(
				"--accent-bg",
				`rgb(${palette?.Vibrant?.rgb.join(", ")})` || "#fff",
			);
			document.documentElement.style.setProperty(
				"--accent-bg-light",
				`rgb(${palette?.LightVibrant?.rgb.join(", ")})` || "#fff",
			);
			document.documentElement.style.setProperty(
				"--accent-muted-light",
				`rgb(${palette?.LightMuted?.rgb.join(", ")})` || "#fff",
			);
			document.documentElement.style.setProperty(
				"--accent-muted-dark",
				`rgb(${palette?.DarkMuted?.rgb.join(", ")})` || "#fff",
			);
			document.documentElement.style.setProperty(
				"--accent-muted",
				`rgb(${palette?.Muted?.rgb.join(", ")})` || "#fff",
			);
			document.documentElement.style.setProperty(
				"--accent-text-dark",
				textColors.dark || "#ffffff",
			);
			document.documentElement.style.setProperty(
				"--accent-text-light",
				textColors.light || "#ffffff",
			);
			document.documentElement.style.setProperty(
				"--accent-text",
				palette?.LightMuted?.bodyTextColor || "#ffffff",
			);
        })
		document.querySelectorAll('[class*="cover-"]').forEach(el => {
				el.classList.forEach(cls => {
					const match = cls.match(/^(text|bg|border)-cover-(.+)$/);
					if (match) {
						if (!(el.classList.contains("transition-colors") && el.classList.contains("duration-200")))
						el.classList.add('transition-colors', 'duration-1000');
					}
				});
			});
    </script>

    <div class="grid grid-cols-[25%_50%_25%] justify-center text-white overflow-x-scroll min-w-screen">
        <Sidebar transition:persist/>
        <main
            class="relative self-start text-center inline-block bg-cover-base w-full min-h-screen px-8 pt-16 lg:mt-16 mb-16 text-white inline-block"
        >
            {showHeader && (<div
                class="bg-cover-mutedlight flex flex-col justify-end w-80vw lg:w-full min-h-3/4 py-4 my-4"
            >
                <h1 class="text-5xl font-bold z-1">
                    thrizzle's <span class="italic">{title}</span>
                </h1>
                <p class="b-t-dotted b-t-1 b-t-accent w-max mx-auto mb-2 print-hidden">
                    {description}
                </p>
                <!-- <TopNavbar /> -->
            </div>)}
            <div class="text-left my-4 line-height-snug w-80vw lg:w-full">
                <slot />
            </div>
        </main>
        <div class="w-full"></div>
    </div>
    <Footer transition:persist/>

<script>
    document.addEventListener("astro:page-load", () => {
        // scroll position
        const scrollPosition = sessionStorage.getItem("scrollPosition");
        if (scrollPosition) {
            window.scrollTo(0, parseInt(scrollPosition, 10));
        }
    });
    document.addEventListener("astro:before-preparation", () => {
        sessionStorage.setItem("scrollPosition", window.scrollY.toString());
    });
</script>

</Html>
